@model FreeNest.Models.ViewModels.LinkViewModel
@inject IConfiguration Configuration
@{
    ViewBag.Title = "Links";
    string mainUrl = $"/{Configuration["AdminUrl"]}/";
    string webUrl = $"/{Configuration["AdminUrl"]}/Links";
}
@section Styles {
    <link href="~/lib/sweetalert/sweetalert2.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.13.2/themes/ui-lightness/jquery-ui.min.css" />
    <style>
        .dataTable th:first-child,
        .dataTable td:first-child {
            display: none;
        }

        .edit-mode th:first-child,
        .edit-mode td:first-child {
            display: table-cell !important;
        }

        .sortable-row {
            cursor: default;
        }

        .edit-mode .sortable-row {
            cursor: move;
        }

        .sortable-row:hover {
            background-color: #f8f9fa;
        }

        .ui-sortable-helper {
            background-color: #e3f2fd !important;
            box-shadow: 0 2px 8px rgba(0,0,0,0.15);
        }

        .drag-handle {
            cursor: move;
            color: #666;
            padding: 0 5px;
        }

            .drag-handle:hover {
                color: #333;
            }

        .edit-mode-active {
            background-color: #fff3cd;
            border-left: 4px solid #ffc107;
        }

        .edit-mode tbody tr:hover {
            background-color: #f8f9fa;
        }

        .order-changed {
            background-color: #d4edda !important;
            animation: highlight 1s ease-out;
        }

        @@keyframes highlight {
            from {
                background-color: #b3e5fc;
            }

            to {
                background-color: #d4edda;
            }
        }

        .action-buttons {
            display: none;
            gap: 10px;
            margin-bottom: 15px;
        }

            .action-buttons.show {
                display: flex;
            }

        .pending-changes {
            color: #856404;
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 4px;
            padding: 8px 12px;
            margin-right: 10px;
            font-size: 14px;
        }

        .edit-mode-indicator {
            background-color: #d1ecf1;
            border: 1px solid #bee5eb;
            color: #0c5460;
            padding: 10px 15px;
            border-radius: 4px;
            margin-bottom: 15px;
            display: none;
        }

            .edit-mode-indicator.show {
                display: block;
            }
    </style>
}
@section Scripts {
    <script src="~/lib/sweetalert/sweetalert2.min.js"></script>
    <script src="~/lib/datatables/datatables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js"></script>
    <script src="~/js/custom.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        menuParentActive($("#linksA"));
        var data = @Html.Raw(Model.JsonList);
        var dataTable;
        var originalOrder = [];
        var hasChanges = false;
        var editMode = false;

        var cols = [
            {
                data: null,
                "render": function (data, type, row) {
                    return `<i class="fas fa-grip-vertical drag-handle" title="Drag to reorder"></i>`;
                },
                orderable: false,
                className: "text-center",
                width: "30px"
            },
            {
                data: 'Order',
                className: "text-center"
            },
            { data: 'Title' },
            {
                data: 'Url',
                "render": function (data) {
                    return `<a href="${data}" target="_blank">${data}</a>`;
                },
            },
            {
                data: 'Icon',
                "render": function (data) {
                    return `<i class="${data}"></i>`;
                },
                className: "text-center"
            },
            {
                data: 'Id',
                "render": function (data) {
                    return `<a role="button" href = "@webUrl/Edit/${data}/" title="Edit" class="btn btn-rounded btn-sm btn-info me-1"><i class="fa-solid fa-pen"></i></a>
                            <a role="button" href="javascript:Delete('@webUrl/Delete/' ,${data})" title="Delete" class="btn btn-rounded btn-sm btn-danger"><i class="fa-solid fa-trash"></i></a>`;
                },
                orderable: false,
                className: "text-center"
            }
        ];

        $(document).ready(function() {
            originalOrder = [...data];

            CreateDatatableList(data, cols);

            dataTable = $('.dataTable').DataTable();

            initializeRows();
            initSortable();
        });

        function initializeRows() {
            dataTable.rows().every(function() {
                var row = this.node();
                var data = this.data();
                $(row).addClass('sortable-row');
                $(row).attr('data-id', data.Id);
                $(row).attr('data-order', data.Order);
            });
        }

        function initSortable() {
            if (editMode) {
                if ($('.dataTable tbody').hasClass('ui-sortable')) {
                    $('.dataTable tbody').sortable('destroy');
                }

                $('.dataTable tbody').sortable({
                    handle: '.drag-handle',
                    helper: function(e, ui) {
                        ui.children().each(function() {
                            $(this).width($(this).width());
                        });
                        return ui;
                    },
                    start: function(event, ui) {
                        ui.item.addClass('ui-sortable-helper');
                    },
                    stop: function(event, ui) {
                        ui.item.removeClass('ui-sortable-helper');
                        updateOrderVisually();
                    }
                });
            } else {
                if ($('.dataTable tbody').hasClass('ui-sortable')) {
                    $('.dataTable tbody').sortable('destroy');
                }
            }
        }

        function toggleEditMode() {
            editMode = !editMode;

            if (editMode) {
                $('.dataTable').addClass('edit-mode');
                $('.edit-mode-indicator').addClass('show');
                $('#editBtn').html('<i class="fas fa-times"></i> Cancel Edit').removeClass('btn-warning').addClass('btn-secondary');

                dataTable.columns.adjust().draw();

                initSortable();
            } else {
                if (hasChanges) {
                    cancelChanges();
                }
                $('.dataTable').removeClass('edit-mode');
                $('.edit-mode-indicator').removeClass('show');
                $('.action-buttons').removeClass('show');
                $('#editBtn').html('<i class="fas fa-edit"></i> Edit Order').removeClass('btn-secondary').addClass('btn-warning');

                dataTable.columns.adjust().draw();

                initSortable();
                hasChanges = false;
            }
        }

        function updateOrderVisually() {
            if (!editMode) return;

            hasChanges = true;
            var changeCount = 0;

            $('.dataTable tbody tr').each(function(index) {
                var newOrder = index + 1;
                var oldOrder = parseInt($(this).attr('data-order'));

                if (newOrder !== oldOrder) {
                    $(this).addClass('order-changed');
                    changeCount++;
                } else {
                    $(this).removeClass('order-changed');
                }

                var rowIndex = dataTable.row(this).index();
                dataTable.cell(rowIndex, 1).data(newOrder);
            });

            if (changeCount > 0) {
                $('.action-buttons').addClass('show');
                $('.pending-changes').text(`${changeCount} items reordered`);
            } else {
                $('.action-buttons').removeClass('show');
                hasChanges = false;
            }
        }

        function saveChanges() {
            if (!hasChanges || !editMode) return;

            var orderedIds = [];
            var newOrders = [];

            $('.dataTable tbody tr').each(function(index) {
                var id = $(this).data('id');
                var newOrder = index + 1;
                orderedIds.push(id);
                newOrders.push(newOrder);
            });

            $.ajax({
                url: '@webUrl/UpdateOrder',
                type: 'POST',
                data: {
                    ids: orderedIds,
                    orders: newOrders
                },
                timeout: 30000,
                beforeSend: function() {
                    $('#saveBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Saving...');
                },
                success: function(response) {
                    hasChanges = false;
                    editMode = false;

                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Order updated successfully.',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(function() {
                        window.location.href = '@webUrl/';
                    });
                },
                error: function(xhr, status, error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'Failed to update order. Please try again.',
                        confirmButtonText: 'OK'
                    });

                    $('#saveBtn').prop('disabled', false).html('<i class="fas fa-save"></i> Save Changes');
                }
            });
        }

        function cancelChanges() {
            if (!hasChanges && editMode) {
                toggleEditMode();
                return;
            }

            if (hasChanges) {
                dataTable.clear();
                dataTable.rows.add(originalOrder).draw();

                dataTable.rows().every(function() {
                    var row = this.node();
                    var rowData = this.data();
                    $(row).addClass('sortable-row');
                    $(row).attr('data-id', rowData.Id);
                    $(row).attr('data-order', rowData.Order);
                });
            }

            hasChanges = false;
            editMode = false;
            $('.action-buttons').removeClass('show');
            $('.order-changed').removeClass('order-changed');
        }

        window.addEventListener('beforeunload', function (e) {
            if (hasChanges && editMode) {
                e.preventDefault();
                e.returnValue = 'You have unsaved changes. Are you sure you want to leave?';
            }
        });
    </script>
}
<div class="page-header">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@mainUrl">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
        </ol>
    </nav>
    <div>
        <a href="@webUrl/Add/" class="btn waves-effect waves-light btn-success me-2"><i class="fa-solid fa-plus"></i> Add</a>
        <button type="button" id="editBtn" class="btn waves-effect waves-light btn-warning" onclick="toggleEditMode()">
            <i class="fas fa-edit"></i> Edit Order
        </button>
    </div>
</div>

<div class="edit-mode-indicator">
    <i class="fas fa-edit"></i> <strong>Edit Mode Active:</strong> Drag and drop rows using the <i class="fas fa-grip-vertical"></i> handle to reorder items.
</div>

<div class="action-buttons">
    <div class="pending-changes">0 items reordered</div>
    <button type="button" id="saveBtn" class="btn btn-primary" onclick="saveChanges()">
        <i class="fas fa-save"></i> Save Changes
    </button>
    <button type="button" class="btn btn-secondary" onclick="cancelChanges()">
        <i class="fas fa-times"></i> Cancel
    </button>
</div>

<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">@ViewBag.Title</h4>
                <div class="table-responsive">
                    <table id="show_hide_col" class="display nowrap table table-hover table-bordered dataTable" cellspacing="0" width="100%">
                        <thead>
                            <tr>
                                <th width="30px">Drag</th>
                                <th width="60px">Order</th>
                                <th width="20%">Title</th>
                                <th width="30%">Url</th>
                                <th width="80px">Icon</th>
                                <th width="120px">Actions</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>